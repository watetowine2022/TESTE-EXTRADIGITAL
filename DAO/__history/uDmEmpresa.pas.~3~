unit uDmEmpresa;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Datasnap.DBClient,
  Datasnap.Provider, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TDmEmpresa = class(TDataModule)
    QryPesquisar: TFDQuery;
    QryInserir: TFDQuery;
    QryAlterar: TFDQuery;
    QryExcluir: TFDQuery;
    DspPesquisar: TDataSetProvider;
    CdsPesquisar: TClientDataSet;
    QryPesquisarIDEMPRESA: TIntegerField;
    QryPesquisarNMEMPRESA: TStringField;
    CdsPesquisarIDEMPRESA: TIntegerField;
    CdsPesquisarNMEMPRESA: TStringField;
  private
    { Private declarations }
  public
    function GerarId: integer;
  end;

var
  DmEmpresa: TDmEmpresa;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

uses uDmConexao;

{$R *.dfm}

function TDmEmpresa.GerarId: integer;
var UltimoID : TFDQuery;
    s : string;
begin
  UltimoId := TFDQuery.Create(nil);
  try
    with UltimoID do
    begin
      Connection := DmConexao.FDConn;
      s := ' select coalesce(max(idempresa),0) + 1 as seq from cadempresa ';
      SQL.Add(s);
      open;
      Result:= UltimoId.FieldByName('seq').AsInteger;
    end;
  finally
    FreeAndNil(UltimoID);
  end;

end;

end.
